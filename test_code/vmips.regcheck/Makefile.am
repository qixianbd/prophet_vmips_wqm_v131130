# Makefile.am automatically generated by testcase-maker.
# If you make changes here they will go away.

VMIPSTOOL = ../../vmipstool -n -F ../../vmipsrc --ld-script=@top_srcdir@/sample_code/ld.script
CPP_FLAGS = -I@top_srcdir@ -I@top_srcdir@/sample_code
AM_CFLAGS = -g $(CPP_FLAGS)
SETUP = ../../sample_code/setup.o

# simple_asm bgezal
# multifile_asm -setup 0 bgezal bgezal.S
bgezal_SOURCES = bgezal.S
bgezal.rom: bgezal.exe
	$(VMIPSTOOL) --make-rom bgezal.exe bgezal.rom

# simple_asm xor
# multifile_asm -setup 0 xor xor.S
xor_SOURCES = xor.S
xor.rom: xor.exe
	$(VMIPSTOOL) --make-rom xor.exe xor.rom

# simple_c tester
# multifile_c tester tester.c
tester_LDFLAGS = $(SETUP)
tester_SOURCES = tester.c
tester.rom: tester.exe
	$(VMIPSTOOL) --make-rom tester.exe tester.rom

# simple_asm logical
# multifile_asm -setup 0 logical logical.S
logical_SOURCES = logical.S
logical.rom: logical.exe
	$(VMIPSTOOL) --make-rom logical.exe logical.rom

# simple_asm mumble
# multifile_asm -setup 0 mumble mumble.S
mumble_SOURCES = mumble.S
mumble.rom: mumble.exe
	$(VMIPSTOOL) --make-rom mumble.exe mumble.rom

# simple_asm divu
# multifile_asm -setup 0 divu divu.S
divu_SOURCES = divu.S
divu.rom: divu.exe
	$(VMIPSTOOL) --make-rom divu.exe divu.rom

# simple_asm mthi_lo
# multifile_asm -setup 0 mthi_lo mthi_lo.S
mthi_lo_SOURCES = mthi_lo.S
mthi_lo.rom: mthi_lo.exe
	$(VMIPSTOOL) --make-rom mthi_lo.exe mthi_lo.rom

# simple_asm blez
# multifile_asm -setup 0 blez blez.S
blez_SOURCES = blez.S
blez.rom: blez.exe
	$(VMIPSTOOL) --make-rom blez.exe blez.rom

# simple_asm haltdev
# multifile_asm -setup 0 haltdev haltdev.S
haltdev_SOURCES = haltdev.S
haltdev.rom: haltdev.exe
	$(VMIPSTOOL) --make-rom haltdev.exe haltdev.rom

# simple_asm sub
# multifile_asm -setup 0 sub sub.S
sub_SOURCES = sub.S
sub.rom: sub.exe
	$(VMIPSTOOL) --make-rom sub.exe sub.rom

# simple_asm lwl
# multifile_asm -setup 0 lwl lwl.S
lwl_SOURCES = lwl.S
lwl.rom: lwl.exe
	$(VMIPSTOOL) --make-rom lwl.exe lwl.rom

# simple_asm lwr
# multifile_asm -setup 0 lwr lwr.S
lwr_SOURCES = lwr.S
lwr.rom: lwr.exe
	$(VMIPSTOOL) --make-rom lwr.exe lwr.rom

# simple_asm -setup 1 swl
# multifile_asm -setup 1 swl swl.S
swl_LDFLAGS = $(SETUP)
swl_SOURCES = swl.S
swl.rom: swl.exe
	$(VMIPSTOOL) --make-rom swl.exe swl.rom

# simple_asm -setup 1 swr
# multifile_asm -setup 1 swr swr.S
swr_LDFLAGS = $(SETUP)
swr_SOURCES = swr.S
swr.rom: swr.exe
	$(VMIPSTOOL) --make-rom swr.exe swr.rom

# simple_asm multu
# multifile_asm -setup 0 multu multu.S
multu_SOURCES = multu.S
multu.rom: multu.exe
	$(VMIPSTOOL) --make-rom multu.exe multu.rom

# simple_asm shift
# multifile_asm -setup 0 shift shift.S
shift_SOURCES = shift.S
shift.rom: shift.exe
	$(VMIPSTOOL) --make-rom shift.exe shift.rom

# simple_asm coproc
# multifile_asm -setup 0 coproc coproc.S
coproc_SOURCES = coproc.S
coproc.rom: coproc.exe
	$(VMIPSTOOL) --make-rom coproc.exe coproc.rom

# simple_asm bltz
# multifile_asm -setup 0 bltz bltz.S
bltz_SOURCES = bltz.S
bltz.rom: bltz.exe
	$(VMIPSTOOL) --make-rom bltz.exe bltz.rom

# simple_asm sltiu
# multifile_asm -setup 0 sltiu sltiu.S
sltiu_SOURCES = sltiu.S
sltiu.rom: sltiu.exe
	$(VMIPSTOOL) --make-rom sltiu.exe sltiu.rom

# simple_asm addi
# multifile_asm -setup 0 addi addi.S
addi_SOURCES = addi.S
addi.rom: addi.exe
	$(VMIPSTOOL) --make-rom addi.exe addi.rom

# simple_asm srlv
# multifile_asm -setup 0 srlv srlv.S
srlv_SOURCES = srlv.S
srlv.rom: srlv.exe
	$(VMIPSTOOL) --make-rom srlv.exe srlv.rom

# simple_asm add
# multifile_asm -setup 0 add add.S
add_SOURCES = add.S
add.rom: add.exe
	$(VMIPSTOOL) --make-rom add.exe add.rom

# simple_asm jalr
# multifile_asm -setup 0 jalr jalr.S
jalr_SOURCES = jalr.S
jalr.rom: jalr.exe
	$(VMIPSTOOL) --make-rom jalr.exe jalr.rom

# simple_asm bc0
# multifile_asm -setup 0 bc0 bc0.S
bc0_SOURCES = bc0.S
bc0.rom: bc0.exe
	$(VMIPSTOOL) --make-rom bc0.exe bc0.rom

# simple_asm load
# multifile_asm -setup 0 load load.S
load_SOURCES = load.S
load.rom: load.exe
	$(VMIPSTOOL) --make-rom load.exe load.rom

# simple_asm -setup 1 tlbwr
# multifile_asm -setup 1 tlbwr tlbwr.S
tlbwr_LDFLAGS = $(SETUP)
tlbwr_SOURCES = tlbwr.S
tlbwr.rom: tlbwr.exe
	$(VMIPSTOOL) --make-rom tlbwr.exe tlbwr.rom

# simple_asm slti
# multifile_asm -setup 0 slti slti.S
slti_SOURCES = slti.S
slti.rom: slti.exe
	$(VMIPSTOOL) --make-rom slti.exe slti.rom

# simple_asm -setup 1 store
# multifile_asm -setup 1 store store.S
store_LDFLAGS = $(SETUP)
store_SOURCES = store.S
store.rom: store.exe
	$(VMIPSTOOL) --make-rom store.exe store.rom

# simple_asm handler5
# multifile_asm -setup 0 handler5 handler5.S
handler5_SOURCES = handler5.S
handler5.rom: handler5.exe
	$(VMIPSTOOL) --make-rom handler5.exe handler5.rom

# simple_asm bgtz
# multifile_asm -setup 0 bgtz bgtz.S
bgtz_SOURCES = bgtz.S
bgtz.rom: bgtz.exe
	$(VMIPSTOOL) --make-rom bgtz.exe bgtz.rom

# simple_asm syscall
# multifile_asm -setup 0 syscall syscall.S
syscall_SOURCES = syscall.S
syscall.rom: syscall.exe
	$(VMIPSTOOL) --make-rom syscall.exe syscall.rom

# simple_asm bltzal
# multifile_asm -setup 0 bltzal bltzal.S
bltzal_SOURCES = bltzal.S
bltzal.rom: bltzal.exe
	$(VMIPSTOOL) --make-rom bltzal.exe bltzal.rom

noinst_PROGRAMS =  bgezal xor tester logical mumble divu mthi_lo blez haltdev sub lwl lwr swl swr multu shift coproc bltz sltiu addi srlv add jalr bc0 load tlbwr slti store handler5 bgtz syscall bltzal

LINK = $(VMIPSTOOL) --link -o $@
COMPILE = $(VMIPSTOOL) --compile $(CFLAGS)
ASCOMPILE = $(VMIPSTOOL) --compile $(CFLAGS)
CCASCOMPILE = $(VMIPSTOOL) --compile $(CFLAGS)
EXEEXT = .exe

CLEANFILES =  bgezal.rom xor.rom tester.rom logical.rom mumble.rom divu.rom mthi_lo.rom blez.rom haltdev.rom sub.rom lwl.rom lwr.rom swl.rom swr.rom multu.rom shift.rom coproc.rom bltz.rom sltiu.rom addi.rom srlv.rom add.rom jalr.rom bc0.rom load.rom tlbwr.rom slti.rom store.rom handler5.rom bgtz.rom syscall.rom bltzal.rom

EXTRA_DIST =  regcheck.exp  bgezal.par xor.par tester.par logical.par mumble.par divu.par mthi_lo.par blez.par haltdev.par sub.par lwl.par lwr.par swl.par swr.par multu.par shift.par coproc.par bltz.par sltiu.par addi.par srlv.par add.par jalr.par bc0.par load.par tlbwr.par slti.par store.par handler5.par bgtz.par syscall.par bltzal.par

# 1 C testcases and 31 asm testcases.
# 0 custom makefile fragment testcases.
